{% import "enum.py.jinja" as enum_temp with context -%}
{% import "object.py.jinja" as object_temp with context -%}
{% import "alias.py.jinja" as alias_temp with context -%}

import dataclasses
import enum
import typing

from vkmodels.bases import ObjectBase

{% for class_name, entity in objects_data.items() -%}
    {%- if entity["type"] == "object" -%}
        {%- if "oneOf" in entity -%}
            {{ alias_temp.gen_alias(class_name, entity) }}
        {%- else -%}
            {{ object_temp.gen_object(class_name, entity) }}
        {%- endif -%}
    {%- elif "enum" in entity -%}
        {{ enum_temp.gen_enum(class_name, entity) }}
    {%- elif "array" in entity -%}
        {{ alias_temp.gen_alias(class_name, entity) }}
    {%- endif -%}
    {{- "\n\n\n" -}}
{%- endfor -%}